@title: Blog SEO Analyzer MDC 규칙
@description: 블로그 SEO 분석기 프로젝트의 일관된 품질, 기능, 확장성, 오픈소스 정책을 보장하기 위한 메타 디자인 규칙

# 1. 목적 및 범위
- 본 프로젝트는 블로그 URL 입력만으로 SEO 및 마케팅 관점에서 콘텐츠를 자동 분석하는 도구를 제공해야 한다.
- 대상 플랫폼: 네이버 블로그, 티스토리, 워드프레스 등 주요 블로그 플랫폼을 지원해야 한다.

# 2. 기능 규칙
- 웹 크롤링 및 스크래핑 기능을 통해 블로그 본문, 메타데이터, 이미지, 링크 등 주요 정보를 자동 추출해야 한다.
- SEO 분석 모듈은 다음을 반드시 포함해야 한다:
  - 키워드 밀도 분석
  - 제목/메타 설명 최적화 검사
  - 헤딩(H1~H3) 구조 분석
  - 내부/외부 링크 및 이미지 alt 태그 검사
  - 콘텐츠 길이 및 가독성 분석
- 자연어 처리 분석 모듈은 다음을 반드시 포함해야 한다:
  - 한국어 형태소 분석(필수), 영어 등 다국어 확장 고려
  - TF-IDF, TextRank 기반 키워드 추출
  - LDA, BERTopic 등 토픽 모델링
- 감성 분석 모듈은 긍정/부정/중립 분류 및 톤앤매너 분석을 제공해야 한다.
- 경쟁 분석 모듈은 유사 콘텐츠 비교, 키워드 경쟁도, 차별화 포인트를 제시해야 한다.
- 고급 분석(의미 네트워크, E-A-T, 사용자 의도, CTA 분석 등)은 확장성 있게 설계한다.

# 3. 기술 및 품질 규칙
- 백엔드는 Python(FastAPI/Flask), PostgreSQL, Redis, Celery를 기본으로 한다.
- 크롤링은 BeautifulSoup, Scrapy, Selenium 등 신뢰성 높은 라이브러리를 사용한다.
- 자연어 처리는 KoNLPy, soynlp, Kiwi, NLTK, spaCy, transformers 등 표준 라이브러리를 우선 적용한다.
- 프론트엔드는 React.js/Vue.js, Material-UI/Ant Design, Chart.js/D3.js를 사용한다.
- 데이터 시각화는 Python(Plotly, Seaborn 등) 및 웹(D3.js 등) 기반으로 한다.
- 모든 분석 결과는 API, 대시보드, PDF/Excel/JSON 등 다양한 형태로 제공되어야 한다.
- 시스템은 마이크로서비스 구조로 설계하며, 각 서비스는 독립적으로 배포/확장 가능해야 한다.
- 분석 정확도 95% 이상, 평균 처리속도 30초 이내, 시스템 안정성 99.9% 이상을 목표로 한다.

# 4. 문서화 및 오픈소스 규칙
- 모든 코드와 API는 PEP8, ESLint 등 표준 코드 스타일을 준수한다.
- README, API 문서(OpenAPI/Swagger), CONTRIBUTING.md, 코드 스타일 가이드 등 문서화를 철저히 한다.
- 라이선스는 MIT 또는 Apache 2.0을 기본으로 하며, 상업적 이용 및 외부 기여를 허용한다.
- GitHub Issues, Discussions, Actions 등 오픈소스 협업 도구를 적극 활용한다.

# 5. 확장성 및 미래지향 규칙
- 다국어 지원, 소셜 미디어 분석, 실시간 모니터링, A/B 테스트 등 확장 기능을 고려한 구조로 설계한다.
- AI 고도화(GPT 연동, 이미지/음성/예측 모델 등) 및 자동화된 개선 제안 기능을 염두에 둔다.
- 모든 신규 기능은 기존 시스템과의 호환성, 테스트, 문서화가 선행되어야 한다.

# 6. 성공 지표 및 KPI
- 분석 정확도, 처리 속도, 시스템 안정성, 사용자 만족도 등 핵심 KPI를 지속적으로 측정/개선한다.
- 오픈소스 지표(GitHub Stars, 기여자 수, 이슈 해결률 등)도 주요 성공 기준으로 삼는다.

# 7. 윤리 및 책임
- 크롤링 및 데이터 수집 시 각 플랫폼의 정책과 법적 규제를 준수한다.
- 개인정보 및 민감 정보는 저장/분석/출력하지 않는다.

@last_updated: 2024-06-09